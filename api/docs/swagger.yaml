basePath: /api/v1
definitions:
  main.Category:
    properties:
      category_id:
        type: string
      category_name:
        type: string
    type: object
  main.ETLJobStatus:
    properties:
      file_name:
        type: string
      id:
        type: integer
      last_updated:
        type: string
      status:
        type: string
    type: object
  main.ForecastPoint:
    properties:
      forecast_date:
        type: string
      lower_bound:
        type: number
      predicted_sales:
        type: number
      upper_bound:
        type: number
    type: object
  main.HistoricalForecast:
    properties:
      forecasts:
        items:
          $ref: '#/definitions/main.ForecastPoint'
        type: array
      model_version_id:
        type: integer
    type: object
  main.JobStatusResponse:
    properties:
      category_id:
        type: string
      created_at:
        type: string
      error_message:
        type: string
      job_id:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  main.Product:
    properties:
      category_id:
        type: string
      description:
        type: string
      product_id:
        type: string
      product_name:
        type: string
    type: object
  main.Promotion:
    properties:
      discount_percentage:
        type: integer
      end_date:
        type: string
      promotion_id:
        type: string
      promotion_name:
        type: string
      start_date:
        type: string
      target_id:
        type: string
      target_type:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
    url: http://www.example.com/support
  description: This is the Backend-for-Frontend (BFF) API gateway for the sales forecasting
    platform. It serves cached forecasts, manages async jobs, and proxies requests
    to downstream MLOps services.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Sales Forecasting API Gateway (BFF)
  version: "1.2"
paths:
  /catalog/categories:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all product categories.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Category'
            type: array
        "500":
          description: Internal server error.
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Categories
      tags:
      - Catalog
  /catalog/products:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all products, with optional filtering by category.
      parameters:
      - description: Filter by Category ID
        in: query
        name: category_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Product'
            type: array
        "500":
          description: Internal server error.
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Products
      tags:
      - Catalog
  /catalog/promotions:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all promotions.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Promotion'
            type: array
        "500":
          description: Internal server error.
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get All Promotions
      tags:
      - Catalog
  /data/preprocess/run:
    post:
      consumes:
      - application/json
      description: Triggers a background job to run the Go-based data preprocessing
        service.
      produces:
      - application/json
      responses:
        "202":
          description: Job started.
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to start job.
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Run Data Preprocessing
      tags:
      - Data
  /etl/jobs:
    get:
      consumes:
      - application/json
      description: Retrieves a list of the most recent ETL (data processing) job statuses.
      parameters:
      - default: 50
        description: Number of jobs to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.ETLJobStatus'
            type: array
        "500":
          description: Internal server error.
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get ETL Job Statuses
      tags:
      - ETL
  /forecasts/{category_id}:
    get:
      consumes:
      - application/json
      description: Retrieves a sales forecast for a specific category. Tries to serve
        from a cache first. If the requested period is not fully cached, it creates
        an asynchronous job to generate the missing data.
      parameters:
      - description: Category ID (e.g., CAT_01)
        in: path
        name: category_id
        required: true
        type: string
      - description: Forecast Horizon (daily, monthly, yearly)
        enum:
        - daily
        - monthly
        - yearly
        in: query
        name: forecast_horizon
        required: true
        type: string
      - description: Number of periods to forecast
        in: query
        name: period
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: A JSON object containing the forecast data.
          schema:
            additionalProperties: true
            type: object
        "202":
          description: An asynchronous job has been created.
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid input parameters.
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error.
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Sales Forecast
      tags:
      - Forecasting
  /forecasts/{category_id}/history:
    get:
      consumes:
      - application/json
      description: Retrieves historical forecasts for a category within a date range,
        grouped by the model version that generated them.
      parameters:
      - description: Category ID
        in: path
        name: category_id
        required: true
        type: string
      - description: Start date (YYYY-MM-DD)
        in: query
        name: start_date
        required: true
        type: string
      - description: End date (YYYY-MM-DD)
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.HistoricalForecast'
            type: array
        "400":
          description: Invalid input parameters.
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error.
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Historical Forecasts
      tags:
      - Forecasting
  /jobs:
    get:
      consumes:
      - application/json
      description: Retrieves a list of the most recent asynchronous forecast jobs.
      parameters:
      - default: 20
        description: Number of jobs to return
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.JobStatusResponse'
            type: array
        "500":
          description: Internal server error.
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List Recent Jobs
      tags:
      - Jobs
  /jobs/{job_id}:
    get:
      consumes:
      - application/json
      description: Retrieves the status of an asynchronous forecast job.
      parameters:
      - description: Job ID (UUID)
        in: path
        name: job_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.JobStatusResponse'
        "404":
          description: Job not found.
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error.
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Job Status
      tags:
      - Jobs
  /jobs/{job_id}/cancel:
    post:
      consumes:
      - application/json
      description: Cancels a PENDING asynchronous forecast job.
      parameters:
      - description: Job ID (UUID) to cancel
        in: path
        name: job_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Job cancelled successfully.
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Job not found.
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Job is not in a cancellable state (must be PENDING).
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error.
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Cancel a Job
      tags:
      - Jobs
  /mlops/observability/performance/{version_id}:
    get:
      consumes:
      - application/json
      description: Retrieves the live performance history for a specific model version
        ID.
      parameters:
      - description: Model Version ID
        in: path
        name: version_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Model Performance History
      tags:
      - Observability
  /mlops/observability/versions:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all model versions from the registry, ordered
        by training date.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "500":
          description: Internal server error.
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List All Model Versions
      tags:
      - Observability
  /mlops/observability/versions/{category_id}:
    get:
      consumes:
      - application/json
      description: Retrieves the complete version history for a specific category's
        model.
      parameters:
      - description: Category ID
        in: path
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get Model Version History
      tags:
      - Observability
  /mlops/training/run:
    post:
      consumes:
      - application/json
      description: Triggers a background job in the Python forecasting engine to retrain
        all models and refresh the forecast cache.
      produces:
      - application/json
      responses:
        "202":
          description: Training job accepted.
          schema:
            additionalProperties:
              type: string
            type: object
        "502":
          description: Failed to reach downstream service.
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Trigger Model Training
      tags:
      - MLOps
swagger: "2.0"
